version: '3.8'

services:
  # API backend
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=waymaker_user
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=waymaker_ai
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://waymaker.4children.3manwill.com
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MAIL_TYPE=smtp
      - MAIL_DEFAULT_SEND_FROM=${MAIL_FROM}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_USE_TLS=true
      - WAYMAKER_BRAND_NAME=WayMaker AI
      - WAYMAKER_TAGLINE="Your path to living God's will---step by step"
      - DEFAULT_LANGUAGE=en
      - SUPPORTED_LANGUAGES=en,es,ar
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - waymaker_uploads:/app/storage/uploads
      - waymaker_logs:/app/logs

  # Frontend
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_PREFIX=https://waymaker.4children.3manwill.com/console/api
      - NEXT_PUBLIC_PUBLIC_API_PREFIX=https://waymaker.4children.3manwill.com/api
      - NEXT_PUBLIC_APP_URL=https://waymaker.4children.3manwill.com
      - NEXT_PUBLIC_DEPLOY_ENV=PRODUCTION
      - NEXT_PUBLIC_EDITION=SELF_HOSTED
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_UPLOAD_IMAGE_AS_ICON=false
      - NEXT_PUBLIC_TEXT_GENERATION_TIMEOUT_MS=60000
    depends_on:
      - api
    restart: unless-stopped

  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=waymaker_ai
      - POSTGRES_USER=waymaker_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - waymaker_postgres:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - waymaker_redis:/data
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - waymaker_static:/var/www/static:ro
    depends_on:
      - web
      - api
    restart: unless-stopped

volumes:
  waymaker_postgres:
  waymaker_redis:
  waymaker_uploads:
  waymaker_logs:
  waymaker_static:

networks:
  default:
    name: waymaker_network