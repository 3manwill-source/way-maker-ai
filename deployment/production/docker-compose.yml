version: '3.8'

services:
  # The nginx reverse proxy
  nginx:
    image: nginx:latest
    container_name: waymaker-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - web-static:/var/www/html
    depends_on:
      - api
      - web
    networks:
      - waymaker-network

  # The main dify api
  api:
    image: langgenius/dify-api:0.6.16
    container_name: waymaker-api
    restart: always
    environment:
      - MODE=prod
      - LOG_LEVEL=INFO
      - SECRET_KEY=${SECRET_KEY}
      - EDITION=SELF_HOSTED
      - DEPLOY_ENV=PRODUCTION
      - EXPERIMENTAL_FEATURES=
      # Database
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      # Redis
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      # Celery
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      # Storage
      - STORAGE_TYPE=local
      # Vector Database
      - VECTOR_STORE=weaviate
      - WEAVIATE_HOST=${WEAVIATE_HOST}
      - WEAVIATE_PORT=${WEAVIATE_PORT}
      # Mail
      - MAIL_TYPE=smtp
      - MAIL_DEFAULT_SEND_FROM=${MAIL_DEFAULT_SEND_FROM}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_USE_TLS=${SMTP_USE_TLS}
      # Web
      - WEB_API_CORS_ALLOW_ORIGINS=${WEB_API_CORS_ALLOW_ORIGINS}
      - CONSOLE_CORS_ALLOW_ORIGINS=${CONSOLE_CORS_ALLOW_ORIGINS}
      - CONSOLE_WEB_URL=${CONSOLE_WEB_URL}
      - WEB_API_URL=${WEB_API_URL}
      - APP_WEB_URL=${APP_WEB_URL}
      # File Access
      - FILES_URL=${FILES_URL}
    depends_on:
      - db
      - redis
      - weaviate
    volumes:
      - ./volumes/app/storage:/app/api/storage
      - ./volumes/app/logs:/app/api/logs
    networks:
      - waymaker-network

  # The web frontend
  web:
    image: langgenius/dify-web:0.6.16
    container_name: waymaker-web
    restart: always
    environment:
      - CONSOLE_API_URL=${CONSOLE_API_URL}
      - APP_API_URL=${APP_API_URL}
      - EDITION=SELF_HOSTED
    depends_on:
      - api
    volumes:
      - web-static:/app/web/dist
    networks:
      - waymaker-network

  # Worker
  worker:
    image: langgenius/dify-api:0.6.16
    container_name: waymaker-worker
    restart: always
    environment:
      - MODE=prod
      - LOG_LEVEL=INFO
      - SECRET_KEY=${SECRET_KEY}
      - EDITION=SELF_HOSTED
      - DEPLOY_ENV=PRODUCTION
      # Database
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      # Redis
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      # Celery
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      # Storage
      - STORAGE_TYPE=local
      # Vector Database
      - VECTOR_STORE=weaviate
      - WEAVIATE_HOST=${WEAVIATE_HOST}
      - WEAVIATE_PORT=${WEAVIATE_PORT}
    depends_on:
      - db
      - redis
      - weaviate
    volumes:
      - ./volumes/app/storage:/app/api/storage
      - ./volumes/app/logs:/app/api/logs
    command: >
      bash -c "python -m celery -A app.celery worker -P gevent -c 1 --loglevel INFO
        && python -m celery -A app.celery beat --loglevel INFO"
    networks:
      - waymaker-network

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    container_name: waymaker-db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - waymaker-network

  # Redis
  redis:
    image: redis:6-alpine
    container_name: waymaker-redis
    restart: always
    volumes:
      - ./volumes/redis/data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - waymaker-network

  # Weaviate vector database
  weaviate:
    image: semitechnologies/weaviate:1.19.0
    container_name: waymaker-weaviate
    restart: always
    volumes:
      - ./volumes/weaviate:/var/lib/weaviate
    environment:
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=false
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      - CLUSTER_HOSTNAME=node1
    networks:
      - waymaker-network

volumes:
  web-static:

networks:
  waymaker-network:
    driver: bridge